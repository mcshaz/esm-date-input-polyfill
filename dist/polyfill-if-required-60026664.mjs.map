{"version":3,"file":"polyfill-if-required-60026664.mjs","sources":["../src/date-input-is-supported.ts","../src/find-inputs-helper.ts","../src/polyfill-if-required.ts"],"sourcesContent":["const isDateInputSupported = doesSupportDateInput();\r\n\r\nexport { isDateInputSupported };\r\n\r\nfunction doesSupportDateInput() {\r\n    const input = document.createElement('input');\r\n    input.setAttribute('type', 'date');\r\n\r\n    const notADateValue = 'not-a-date';\r\n    input.setAttribute('value', notADateValue);\r\n    return input.value !== notADateValue;\r\n}\r\n","import { isDateInputSupported } from './date-input-is-supported';\r\nconst pickerAppliedAttr = 'data-has-picker';\r\nconst forcePickerAttr = 'data-force-date-input-polyfill';\r\n\r\nclass FindInputsHelper {\r\n    constructor(readonly forcePolyfill = false) {\r\n    }\r\n\r\n    requiresPolyfilling(el: Element | null) {\r\n        return el !== null && el.tagName === 'INPUT' && el.getAttribute('type') === 'date' && !el.hasAttribute(pickerAppliedAttr)\r\n          && (!isDateInputSupported || (this.forcePolyfill && el.closest(`[${forcePickerAttr}]`) !== null));\r\n    }\r\n\r\n    getAllInputsForPolyfilling() {\r\n        // keeping logic in 1 place for now - see commented out code below for alternative\r\n        return Array.from(document.getElementsByTagName('input')).filter((el) => this.requiresPolyfilling(el)) \r\n          || [];\r\n        /*\r\n      if (supported) {\r\n        document.querySelectorAll(`input[type=\"date\"][${forcePicker}]:not([${pickerApplied}]), [${forcePicker}] input[type=\"date\"]:not([${pickerApplied}])`);\r\n      } else {\r\n        return document.querySelectorAll(`input[type=\"date\"]:not([${pickerApplied}])`);\r\n      }\r\n      */\r\n    }\r\n}\r\n\r\nexport { pickerAppliedAttr, forcePickerAttr, FindInputsHelper };\r\n","import { isDateInputSupported } from './date-input-is-supported';\r\nimport { forcePickerAttr } from './find-inputs-helper';\r\nimport { Input } from './input';\r\n\r\n// Run the above code on any <input type=\"date\"> in the document, also on dynamically created ones.\r\n// Check if type=\"date\" is supported.\r\nexport function polyfillIfRequired({ watchForInsert = false, forcePolyfill = false, yrsBack = 80, yrsFwd = 20 } = {}) {\r\n    if (isDateInputSupported && !(forcePolyfill && document.querySelector(`[${forcePickerAttr}]`))) {\r\n        return Promise.resolve(null);\r\n    } else {\r\n        return import('./add-pickers').then((module) => {\r\n            return new Promise<Input[] | null>((resolve /*, _reject */) => {\r\n                let isPickerAdded = false;\r\n                const loaded = () => {\r\n                    if (!isPickerAdded) {\r\n                        isPickerAdded = true;\r\n                        resolve(module.addPickers({ watchForInsert, forcePolyfill, yrsBack, yrsFwd }));\r\n                    }\r\n                };\r\n                if (document.readyState === 'complete') {\r\n                    loaded();\r\n                } else {\r\n                    document.addEventListener('DOMContentLoaded', loaded);\r\n                    window.addEventListener('load', loaded);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}"],"names":["isDateInputSupported","input","document","createElement","setAttribute","value","doesSupportDateInput","pickerAppliedAttr","FindInputsHelper","[object Object]","forcePolyfill","this","el","tagName","getAttribute","hasAttribute","closest","Array","from","getElementsByTagName","filter","requiresPolyfilling","polyfillIfRequired","watchForInsert","yrsBack","yrsFwd","querySelector","import","then","module","Promise","resolve","isPickerAdded","loaded","addPickers","readyState","addEventListener","window"],"mappings":";MAAMA,EAIN,WACI,MAAMC,EAAQC,SAASC,cAAc,SACrCF,EAAMG,aAAa,OAAQ,QAI3B,OADAH,EAAMG,aAAa,QADG,cAAA,eAEfH,EAAMI,MAVYC,SCCvBC,EAAoB,kBAG1B,MAAMC,EACFC,YAAqBC,GAAgB,GAAhBC,mBAAAD,EAGrBD,oBAAoBG,GAChB,OAAc,OAAPA,GAA8B,UAAfA,EAAGC,SAAmD,SAA5BD,EAAGE,aAAa,UAAuBF,EAAGG,aARxE,sBASXf,GAAyBW,KAAKD,eAAwD,OAAvCE,EAAGI,QAAQ,qCAGrEP,6BAEI,OAAOQ,MAAMC,KAAKhB,SAASiB,qBAAqB,UAAUC,OAAQR,GAAOD,KAAKU,oBAAoBT,KAC7F,aCVGU,GAAmBC,eAAEA,GAAiB,EAAKb,cAAEA,GAAgB,EAAKc,QAAEA,EAAU,GAAEC,OAAEA,EAAS,IAAO,IAC9G,OAAIzB,GAA0BU,GAAiBR,SAASwB,cAAc,oCAG3DC,OAAO,8BAAiBC,KAAMC,GAC1B,IAAIC,QAAyBC,IAChC,IAAIC,GAAgB,EACpB,MAAMC,EAAS,KACND,IACDA,GAAgB,EAChBD,EAAQF,EAAOK,WAAW,CAAEX,eAAAA,EAAgBb,cAAAA,EAAec,QAAAA,EAASC,OAAAA,OAGhD,aAAxBvB,SAASiC,WACTF,KAEA/B,SAASkC,iBAAiB,mBAAoBH,GAC9CI,OAAOD,iBAAiB,OAAQH,OAfrCH,QAAQC,QAAQ"}